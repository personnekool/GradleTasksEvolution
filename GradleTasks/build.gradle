plugins {
    id 'java'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}
/**
 * Solution exercise 9
 *
 * task myTask   // Empty task (no type)
 * task myTask { configure closure }
 * task myTask(type: SomeType)  // Empty task
 * task myTask(type: SomeType) { configure closure }
 * tasks.register(name){}  // RECOMMENDED and OVERLOADED
 *
 * Extra arguments can be defined inside the task closure.
 * Task properties can be defined using setters or direct assignment
 *
 * IMPORTANT
 * Each plugin will add new properties and tasks. See properties and tasks
 * for application, eclipse and org.jetbrains.intellij plugins in Gradle Documentation
 * and IntelliJ IDEA web page.
 */

tasks.register("Task1"){
    setDescription("Task1 description goes here.")
    setGroup("Group1")
    setDidWork(true)
    setEnabled(true)

    println "Task state: ${getState()}"
    println "This is Task1"
}

tasks.register("Task2"){
    description = "Task2 description goes here."
    group = "Group1"
    didWork = true
    enabled = true
    dependsOn = ['Task1']

    println "This is Task2"
}

tasks.register("Task3"){
    description =" Task3 description goes here."
    group = "Group1"
    enabled = false
    dependsOn = ['Task1', 'Task2']

    println "This is Task3"
}


